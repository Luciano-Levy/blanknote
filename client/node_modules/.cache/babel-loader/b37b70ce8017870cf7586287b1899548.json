{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport '../styles/config.css';\nimport { ReactComponent as ConfigIcon } from '../images/config.svg';\nimport { ReactComponent as CrossIcon } from '../images/cross.svg';\nimport rgbHex from 'rgb-hex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CongifMenu() {\n  _s();\n\n  const [fontSize, SetfontSize] = useState(null);\n  const [font, Setfont] = useState(null);\n  const [color, Setcolor] = useState(null);\n  const [backgroundColor, SetbackgroundColor] = useState(null);\n  const [shift, Setshift] = useState(true); // config setter\n\n  useEffect(() => {\n    const configs = ['color', 'backgroundColor', 'font', 'fontSize']; // puede parecer repetitivo pero es mas seguro que estar usando plantillas literales con eval\n\n    configs.map(a => {\n      const configLocal = localStorage.getItem(a);\n\n      if (configLocal != null) {\n        switch (a) {\n          case 'color':\n            Setcolor(configLocal);\n            break;\n\n          case 'backgroundColor':\n            SetbackgroundColor(configLocal);\n            break;\n\n          case 'font':\n            Setfont(configLocal);\n            break;\n\n          case 'fontSize':\n            SetfontSize(configLocal);\n            break;\n        }\n      } else {\n        switch (a) {\n          case 'color':\n            Setcolor('#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('color')));\n            break;\n\n          case 'backgroundColor':\n            SetbackgroundColor('#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('background-color')));\n            break;\n\n          case 'font':\n            Setfont(window.getComputedStyle(document.body).getPropertyValue('font-family'));\n            break;\n\n          case 'fontSize':\n            SetfontSize(window.getComputedStyle(document.body).getPropertyValue('font-size'));\n            break;\n        }\n      }\n    });\n  }, []);\n\n  function configMenuHandler(e) {\n    Setshift(!shift);\n  } // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configBox\",\n    children: [/*#__PURE__*/_jsxDEV(ConfigIcon, {\n      className: \"icon\",\n      onClick: configMenuHandler,\n      style: {\n        display: shift ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Config, {\n      shift: shift,\n      configMenuHandler: configMenuHandler,\n      backgroundColor: backgroundColor,\n      placeholders: [font, fontSize, color, backgroundColor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CongifMenu, \"NI3VscwQ5LbN6VOx/TqAEJBCweQ=\");\n\n_c = CongifMenu;\n;\nexport function Config(props) {\n  // hacer los manejadores de eventos en Ap\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: props.shift ? 'none' : 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configForm\",\n      children: [/*#__PURE__*/_jsxDEV(CrossIcon, {\n        className: \"icon\",\n        onClick: props.configMenuHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fuente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"font\",\n          type: \"text\",\n          placeholder: props.placeholders[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tama\\xF1o fuente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"\",\n          id: \"font-size\",\n          placeholder: props.placeholders[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: props.placeholders[2]\n        }, `${Math.floor(Math.random() * 1000)}-min`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fondo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: props.placeholders[3]\n        }, `${Math.floor(Math.random() * 1000)}-min`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Config;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CongifMenu\");\n$RefreshReg$(_c2, \"Config\");","map":{"version":3,"sources":["/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx"],"names":["React","useState","useEffect","ReactComponent","ConfigIcon","CrossIcon","rgbHex","CongifMenu","fontSize","SetfontSize","font","Setfont","color","Setcolor","backgroundColor","SetbackgroundColor","shift","Setshift","configs","map","a","configLocal","localStorage","getItem","window","getComputedStyle","document","body","getPropertyValue","configMenuHandler","e","display","Config","props","placeholders","Math","floor","random"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\nimport '../styles/config.css'\nimport {ReactComponent as ConfigIcon} from '../images/config.svg';\nimport {ReactComponent as CrossIcon} from '../images/cross.svg';\nimport rgbHex from 'rgb-hex';\n\nexport default function CongifMenu(){\n\n  const[fontSize,SetfontSize] = useState(null)\n  const[font,Setfont] = useState(null)\n  const[color,Setcolor] = useState(null)\n  const[backgroundColor,SetbackgroundColor] = useState(null);\n\n  const[shift, Setshift] = useState(true);\n\n  // config setter\n  useEffect(()=>{\n\n    const configs = ['color', 'backgroundColor', 'font', 'fontSize']\n\n    // puede parecer repetitivo pero es mas seguro que estar usando plantillas literales con eval\n\n    configs.map(a => {\n      const configLocal = localStorage.getItem(a);\n      if (configLocal != null){\n\n      switch (a) {\n        case 'color':\n          Setcolor(configLocal)\n          break;\n        case 'backgroundColor':\n          SetbackgroundColor(configLocal)\n          break;\n        case 'font':\n          Setfont(configLocal)\n          break;\n        case 'fontSize':\n          SetfontSize(configLocal)\n          break;\n\n\n      }\n    }else{\n\n      switch (a) {\n        case 'color':\n          Setcolor('#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('color')))\n          break;\n        case 'backgroundColor':\n          SetbackgroundColor('#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('background-color')))\n          break;\n        case 'font':\n          Setfont(window.getComputedStyle(document.body).getPropertyValue('font-family'))\n          break;\n        case 'fontSize':\n          SetfontSize(window.getComputedStyle(document.body).getPropertyValue('font-size'))\n          break;\n\n\n    }\n  }\n})\n\n  },[])\n\n  function configMenuHandler(e){\n    Setshift(!shift);\n  }\n\n\n  // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n  return(\n    <div className='configBox'>\n      <ConfigIcon className='icon' onClick={configMenuHandler}\n      style={{display: shift ? 'block' : 'none'}} ></ConfigIcon>\n      <Config shift={shift} configMenuHandler={configMenuHandler} backgroundColor={backgroundColor} placeholders={[font,fontSize,color,backgroundColor]}></Config>\n    </div>\n  );\n};\n\nexport function Config(props){\n\n  // hacer los manejadores de eventos en Ap\n\n  return(\n\n    <form style={{display: props.shift ? 'none' : 'block'}}>\n\n      <div className='configForm'>\n        <CrossIcon className='icon' onClick={props.configMenuHandler}></CrossIcon>\n        <div>\n          <label>Fuente</label>\n          <input id='font' type=\"text\"  placeholder={props.placeholders[0]} />\n        </div>\n        <div>\n          <label>Tamaño fuente</label>\n          <input type=\"\" id='font-size' placeholder={props.placeholders[1]}  />\n        </div>\n        <div>\n          <label>Color</label>\n          <input type=\"color\" defaultValue={props.placeholders[2]} key={`${Math.floor((Math.random() * 1000))}-min`}  />\n        </div>\n        <div>\n          <label>Fondo</label>\n          <input type=\"color\" defaultValue={props.placeholders[3]} key={`${Math.floor((Math.random() * 1000))}-min`} />\n        </div>\n      </div>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}