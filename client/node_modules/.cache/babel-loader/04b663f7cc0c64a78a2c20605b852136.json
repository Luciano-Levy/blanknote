{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport '../styles/config.css';\nimport Config from './Config.jsx';\nimport { ReactComponent as ConfigIcon } from '../images/config.svg';\nimport rgbHex from 'rgb-hex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CongifMenu(_ref) {\n  _s();\n\n  let {\n    containerRef\n  } = _ref;\n  const [fontSize, SetfontSize] = useState(null);\n  const [font, Setfont] = useState(null);\n  const [color, Setcolor] = useState(null);\n  const [backgroundColor, SetbackgroundColor] = useState(null);\n  const [shift, Setshift] = useState(true); // config searcher\n\n  useEffect(() => {\n    const configs = ['color', 'backgroundColor', 'font', 'fontSize']; // es repetitivo pero es mas seguro que estar usando plantillas literales con eval\n    // bucar una manera DRY ya que los nombres de los estilos dependen de desde que objeto\n\n    configs.map(a => {\n      const configLocal = localStorage.getItem(a);\n\n      if (configLocal != null) {\n        switch (a) {\n          case 'color':\n            Setcolor(configLocal);\n            break;\n\n          case 'backgroundColor':\n            SetbackgroundColor(configLocal);\n            break;\n\n          case 'font':\n            Setfont(configLocal);\n            break;\n\n          case 'fontSize':\n            SetfontSize(configLocal);\n            break;\n        }\n      } else {\n        switch (a) {\n          case 'color':\n            const color = '#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('color'));\n            Setcolor(color);\n            localStorage.setItem('color', color);\n            break;\n\n          case 'backgroundColor':\n            const backgroundColor = '#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('background-color'));\n            SetbackgroundColor(backgroundColor);\n            localStorage.setItem('backgroundColor', backgroundColor);\n            break;\n\n          case 'font':\n            const font = window.getComputedStyle(document.body).getPropertyValue('font-family');\n            Setfont(font);\n            localStorage.setItem('font', font);\n            break;\n\n          case 'fontSize':\n            const fontSize = window.getComputedStyle(document.body).getPropertyValue('font-size');\n            SetfontSize(fontSize);\n            localStorage.setItem('fontSize', fontSize);\n            break;\n        }\n      }\n    });\n  }, []); //config setter\n\n  useEffect(() => {\n    const bodyStyle = document.body.style;\n    bodyStyle.backgroundColor = backgroundColor;\n    bodyStyle.fontFamily = font;\n    containerRef.current.style.color = color;\n    containerRef.current.style.fontSize = fontSize;\n  });\n\n  function configMenuHandler(e) {\n    Setshift(!shift);\n  }\n\n  function configHandler(e) {\n    switch (e.target.id) {\n      case 'color':\n        console.log('aca');\n        Setcolor(e.target.value);\n        localStorage.setItem('color', e.target.value);\n        break;\n\n      case 'backgroundColor':\n        SetbackgroundColor(e.target.value);\n        localStorage.setItem('backgroundColor', e.target.value);\n        break;\n\n      case 'font':\n        Setfont(e.target.value);\n        localStorage.setItem('font', e.target.value);\n        break;\n\n      case 'fontSize':\n        SetfontSize(e.target.value);\n        localStorage.setItem('fontSize', e.target.value);\n        break;\n    }\n  } // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configBox\",\n    children: [/*#__PURE__*/_jsxDEV(ConfigIcon, {\n      className: \"icon\",\n      onClick: configMenuHandler,\n      style: {\n        display: shift ? 'block' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Config, {\n      shift: shift,\n      configHandler: configHandler,\n      configMenuHandler: configMenuHandler,\n      backgroundColor: backgroundColor,\n      placeholders: [font, fontSize, color, backgroundColor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CongifMenu, \"bCplZEEXOtHLkZL/qSRAxhFMEJE=\");\n\n_c = CongifMenu;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CongifMenu\");","map":{"version":3,"sources":["/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx"],"names":["React","useState","useEffect","Config","ReactComponent","ConfigIcon","rgbHex","CongifMenu","containerRef","fontSize","SetfontSize","font","Setfont","color","Setcolor","backgroundColor","SetbackgroundColor","shift","Setshift","configs","map","a","configLocal","localStorage","getItem","window","getComputedStyle","document","body","getPropertyValue","setItem","bodyStyle","style","fontFamily","current","configMenuHandler","e","configHandler","target","id","console","log","value","display"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\nimport '../styles/config.css'\nimport Config from './Config.jsx'\nimport {ReactComponent as ConfigIcon} from '../images/config.svg';\nimport rgbHex from 'rgb-hex';\n\nexport default function CongifMenu({containerRef}){\n\n  const[fontSize,SetfontSize] = useState(null)\n  const[font,Setfont] = useState(null)\n  const[color,Setcolor] = useState(null)\n  const[backgroundColor,SetbackgroundColor] = useState(null);\n\n  const[shift, Setshift] = useState(true);\n\n  // config searcher\n  useEffect(()=>{\n\n    const configs = ['color', 'backgroundColor', 'font', 'fontSize']\n\n    // es repetitivo pero es mas seguro que estar usando plantillas literales con eval\n    // bucar una manera DRY ya que los nombres de los estilos dependen de desde que objeto\n\n\n    configs.map(a => {\n      const configLocal = localStorage.getItem(a);\n      if (configLocal != null){\n\n      switch (a) {\n        case 'color':\n          Setcolor(configLocal)\n          break;\n        case 'backgroundColor':\n          SetbackgroundColor(configLocal)\n          break;\n        case 'font':\n          Setfont(configLocal)\n          break;\n        case 'fontSize':\n          SetfontSize(configLocal)\n          break;\n\n\n      }\n    }else{\n\n      switch (a) {\n        case 'color':\n          const color = '#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('color'))\n          Setcolor(color)\n          localStorage.setItem('color', color)\n          break;\n        case 'backgroundColor':\n          const backgroundColor =  '#' + rgbHex(window.getComputedStyle(document.body).getPropertyValue('background-color'))\n          SetbackgroundColor(backgroundColor)\n          localStorage.setItem('backgroundColor', backgroundColor)\n          break;\n        case 'font':\n          const font = window.getComputedStyle(document.body).getPropertyValue('font-family')\n          Setfont(font)\n          localStorage.setItem('font',font)\n          break;\n        case 'fontSize':\n          const fontSize =  window.getComputedStyle(document.body).getPropertyValue('font-size')\n          SetfontSize(fontSize)\n          localStorage.setItem('fontSize', fontSize)\n          break;\n\n\n    }\n  }\n})\n\n  },[])\n\n  //config setter\n  useEffect(() => {\n    const bodyStyle = document.body.style\n    bodyStyle.backgroundColor = backgroundColor;\n    bodyStyle.fontFamily = font;\n    containerRef.current.style.color = color;\n    containerRef.current.style.fontSize = fontSize\n  })\n\n  function configMenuHandler(e){\n    Setshift(!shift);\n  }\n\n  function configHandler(e){\n    switch (e.target.id) {\n      case 'color':\n        console.log('aca');\n        Setcolor(e.target.value)\n        localStorage.setItem('color', e.target.value)\n        break;\n      case 'backgroundColor':\n        SetbackgroundColor(e.target.value)\n        localStorage.setItem('backgroundColor', e.target.value)\n        break;\n      case 'font':\n        Setfont(e.target.value)\n        localStorage.setItem('font', e.target.value)\n        break;\n      case 'fontSize':\n        SetfontSize(e.target.value)\n        localStorage.setItem('fontSize', e.target.value)\n        break;\n  }\n}\n\n  // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n  return(\n    <div className='configBox'>\n      <ConfigIcon className='icon' onClick={configMenuHandler} style={{display: shift ? 'block' : 'none'}} ></ConfigIcon>\n      <Config shift={shift} configHandler={configHandler} configMenuHandler={configMenuHandler} backgroundColor={backgroundColor} placeholders={[font,fontSize,color,backgroundColor]}></Config>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}