{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Dev/Blanktxt/client/src/components/ModalLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../styles/modal.css'; //Tener las funciones en otro archivo me facilita el testing y la reutiizacion\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalLogin(props) {\n  _s();\n\n  const container = useRef(null);\n  const [username, Setusername] = useState('');\n  const [loginAgain, SetloginAgain] = useState(false);\n\n  function handleChange(e) {\n    Setusername(e.target.value);\n  }\n\n  ;\n\n  function handleLogin(e) {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        txt: ''\n      })\n    };\n    fetch(\"/api\", requestOptions).then(response => {\n      if (response.status == 403) {\n        SetloginAgain(true);\n      } else {\n        localStorage.setItem('username', username);\n        props.Setlogin(false);\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: container,\n      className: 'modal' + ` ${loginAgain ? 'again' : 'nada'}`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modalContent\",\n        onSubmit: handleLogin,\n        name: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoFocus: true,\n          placeholder: \"No te conozco... me decis quien sos?\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalLogin, \"mNk+2C5t+XLy5ovZmXsn1GRzUSM=\");\n\n_c = ModalLogin;\n;\nexport default ModalLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLogin\");","map":{"version":3,"sources":["/home/luciano/Dev/Blanktxt/client/src/components/ModalLogin.jsx"],"names":["React","useState","useRef","ModalLogin","props","container","username","Setusername","loginAgain","SetloginAgain","handleChange","e","target","value","handleLogin","preventDefault","requestOptions","method","headers","body","JSON","stringify","user","txt","fetch","then","response","status","localStorage","setItem","Setlogin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAO,qBAAP,C,CAEA;;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAGzB,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAK,CAACI,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAK,CAACO,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACvBJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAAA;;AAED,WAASC,WAAT,CAAqBH,CAArB,EAAuB;AACrBA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAChB,QAAN;AAAeiB,QAAAA,GAAG,EAAE;AAApB,OAAf;AAHe,KAAvB;AAMAC,IAAAA,KAAK,CAAC,MAAD,EAASR,cAAT,CAAL,CAA8BS,IAA9B,CAAmCC,QAAQ,IAAG;AAC5C,UAAGA,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA0B;AAExBlB,QAAAA,aAAa,CAAC,IAAD,CAAb;AAED,OAJD,MAIK;AACHmB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCvB,QAAjC;AACAF,QAAAA,KAAK,CAAC0B,QAAN,CAAe,KAAf;AACD;AACF,KATD;AAaD;;AAAA;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEzB,SAAV;AAAqB,MAAA,SAAS,EAAE,UAAW,IAAGG,UAAU,GAAG,OAAH,GAAa,MAAO,EAA5E;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAEM,WAAzC;AAAsD,QAAA,IAAI,EAAC,MAA3D;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,MAA5B;AAA6B,UAAA,WAAW,EAAC,sCAAzC;AAAgF,UAAA,QAAQ,EAAEJ;AAA1F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9CQP,U;;KAAAA,U;AA8CR;AAID,eAAeA,UAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport '../styles/modal.css';\n\n//Tener las funciones en otro archivo me facilita el testing y la reutiizacion\nfunction ModalLogin(props) {\n\n\n  const container = useRef(null)\n  const[username,Setusername] = useState('');\n  const[loginAgain,SetloginAgain] = useState(false)\n\n  function handleChange(e) {\n    Setusername(e.target.value);\n  };\n\n  function handleLogin(e){\n    e.preventDefault();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({user:username,txt: ''})\n    };\n\n    fetch(\"/api\", requestOptions).then(response =>{\n      if(response.status == 403){\n\n        SetloginAgain(true)\n\n      }else{\n        localStorage.setItem('username', username);\n        props.Setlogin(false);\n      }\n    })\n\n\n\n  };\n\n\n  return(\n    <div className='cont'>\n      <div ref={container} className={'modal' + ` ${loginAgain ? 'again' : 'nada'}`}>\n          <form className='modalContent' onSubmit={handleLogin} name='form'>\n            <input type='text' autoFocus placeholder='No te conozco... me decis quien sos?' onChange={handleChange}/>\n          </form>\n        </div>\n    </div>\n\n  );\n};\n\n\n\nexport default ModalLogin;\n"]},"metadata":{},"sourceType":"module"}