{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport '../styles/config.css';\nimport Config from './Config.jsx';\nimport { ReactComponent as ConfigIcon } from '../images/config.svg';\nimport { configsInit } from './functions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CongifMenu(_ref) {\n  _s();\n\n  let {\n    containerRef\n  } = _ref;\n  const [fontSize, SetfontSize] = useState(null);\n  const [font, Setfont] = useState(null);\n  const [color, Setcolor] = useState(null);\n  const [backgroundColor, SetbackgroundColor] = useState(null);\n  const [shift, Setshift] = useState(true); // config searcher\n\n  useEffect(() => {\n    configsInit(Setcolor, SetbackgroundColor, Setfont, SetfontSize);\n  }, []); //config setter\n\n  useEffect(() => {\n    const bodyStyle = document.body.style;\n    bodyStyle.backgroundColor = backgroundColor;\n    bodyStyle.fontFamily = font;\n    containerRef.current.style.color = color;\n    containerRef.current.style.fontSize = fontSize;\n  });\n\n  function configMenuHandler(e) {\n    Setshift(!shift);\n  }\n\n  function configHandler(e) {\n    switch (e.target.id) {\n      case 'color':\n        console.log('aca');\n        Setcolor(e.target.value);\n        localStorage.setItem('color', e.target.value);\n        break;\n\n      case 'backgroundColor':\n        SetbackgroundColor(e.target.value);\n        localStorage.setItem('backgroundColor', e.target.value);\n        break;\n\n      case 'font':\n        Setfont(e.target.value);\n        localStorage.setItem('font', e.target.value);\n        break;\n\n      case 'fontSize':\n        SetfontSize(e.target.value);\n        localStorage.setItem('fontSize', e.target.value);\n        break;\n    }\n  } // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"configBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: shift ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(ConfigIcon, {\n        className: \"icon\",\n        onClick: configMenuHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Config, {\n      shift: shift,\n      configHandler: configHandler,\n      configMenuHandler: configMenuHandler,\n      backgroundColor: backgroundColor,\n      placeholders: [font, fontSize, color, backgroundColor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CongifMenu, \"bCplZEEXOtHLkZL/qSRAxhFMEJE=\");\n\n_c = CongifMenu;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CongifMenu\");","map":{"version":3,"sources":["/home/luciano/Dev/Blanktxt/client/src/components/ConfigMenu.jsx"],"names":["React","useState","useEffect","Config","ReactComponent","ConfigIcon","configsInit","CongifMenu","containerRef","fontSize","SetfontSize","font","Setfont","color","Setcolor","backgroundColor","SetbackgroundColor","shift","Setshift","bodyStyle","document","body","style","fontFamily","current","configMenuHandler","e","configHandler","target","id","console","log","value","localStorage","setItem","display"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,cAAc,IAAIC,UAA1B,QAA2C,sBAA3C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,eAAe,SAASC,UAAT,OAAmC;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEhD,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAK,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAK,CAACY,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAK,CAACc,eAAD,EAAiBC,kBAAjB,IAAuCf,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAK,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAjC,CAPgD,CAShD;;AACAC,EAAAA,SAAS,CAAC,MAAI;AAEZI,IAAAA,WAAW,CAACQ,QAAD,EAAUE,kBAAV,EAA6BJ,OAA7B,EAAqCF,WAArC,CAAX;AAED,GAJQ,EAIP,EAJO,CAAT,CAVgD,CAgBhD;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,KAAhC;AACAH,IAAAA,SAAS,CAACJ,eAAV,GAA4BA,eAA5B;AACAI,IAAAA,SAAS,CAACI,UAAV,GAAuBZ,IAAvB;AACAH,IAAAA,YAAY,CAACgB,OAAb,CAAqBF,KAArB,CAA2BT,KAA3B,GAAmCA,KAAnC;AACAL,IAAAA,YAAY,CAACgB,OAAb,CAAqBF,KAArB,CAA2Bb,QAA3B,GAAsCA,QAAtC;AACD,GANQ,CAAT;;AAQA,WAASgB,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3BR,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD;;AAED,WAASU,aAAT,CAAuBD,CAAvB,EAAyB;AACvB,YAAQA,CAAC,CAACE,MAAF,CAASC,EAAjB;AACE,WAAK,OAAL;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAjB,QAAAA,QAAQ,CAACY,CAAC,CAACE,MAAF,CAASI,KAAV,CAAR;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,CAAC,CAACE,MAAF,CAASI,KAAvC;AACA;;AACF,WAAK,iBAAL;AACEhB,QAAAA,kBAAkB,CAACU,CAAC,CAACE,MAAF,CAASI,KAAV,CAAlB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCR,CAAC,CAACE,MAAF,CAASI,KAAjD;AACA;;AACF,WAAK,MAAL;AACEpB,QAAAA,OAAO,CAACc,CAAC,CAACE,MAAF,CAASI,KAAV,CAAP;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,CAAC,CAACE,MAAF,CAASI,KAAtC;AACA;;AACF,WAAK,UAAL;AACEtB,QAAAA,WAAW,CAACgB,CAAC,CAACE,MAAF,CAASI,KAAV,CAAX;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCR,CAAC,CAACE,MAAF,CAASI,KAA1C;AACA;AAjBJ;AAmBH,GAjDiD,CAmDhD;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAElB,KAAK,GAAG,OAAH,GAAa;AAA5B,OAAf;AAAA,6BAAoD,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA8B,QAAA,OAAO,EAAEQ;AAAvC;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAER,KAAf;AAAsB,MAAA,aAAa,EAAEU,aAArC;AAAoD,MAAA,iBAAiB,EAAEF,iBAAvE;AAA0F,MAAA,eAAe,EAAEV,eAA3G;AAA4H,MAAA,YAAY,EAAE,CAACJ,IAAD,EAAMF,QAAN,EAAeI,KAAf,EAAqBE,eAArB;AAA1I;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1DuBR,U;;KAAAA,U;AA0DvB","sourcesContent":["import {React, useState, useEffect} from 'react';\nimport '../styles/config.css'\nimport Config from './Config.jsx'\nimport {ReactComponent as ConfigIcon} from '../images/config.svg';\nimport {configsInit} from './functions.js'\n\nexport default function CongifMenu({containerRef}){\n\n  const[fontSize,SetfontSize] = useState(null)\n  const[font,Setfont] = useState(null)\n  const[color,Setcolor] = useState(null)\n  const[backgroundColor,SetbackgroundColor] = useState(null);\n\n  const[shift, Setshift] = useState(true);\n\n  // config searcher\n  useEffect(()=>{\n\n    configsInit(Setcolor,SetbackgroundColor,Setfont,SetfontSize)\n\n  },[])\n\n  //config setter\n  useEffect(() => {\n    const bodyStyle = document.body.style\n    bodyStyle.backgroundColor = backgroundColor;\n    bodyStyle.fontFamily = font;\n    containerRef.current.style.color = color;\n    containerRef.current.style.fontSize = fontSize\n  })\n\n  function configMenuHandler(e){\n    Setshift(!shift);\n  }\n\n  function configHandler(e){\n    switch (e.target.id) {\n      case 'color':\n        console.log('aca');\n        Setcolor(e.target.value)\n        localStorage.setItem('color', e.target.value)\n        break;\n      case 'backgroundColor':\n        SetbackgroundColor(e.target.value)\n        localStorage.setItem('backgroundColor', e.target.value)\n        break;\n      case 'font':\n        Setfont(e.target.value)\n        localStorage.setItem('font', e.target.value)\n        break;\n      case 'fontSize':\n        SetfontSize(e.target.value)\n        localStorage.setItem('fontSize', e.target.value)\n        break;\n  }\n}\n\n  // Seria mejor pasar las configuraciones en un Map o objeto para sacarle rigidez\n  return(\n    <div className='configBox'>\n      <button style={{display: shift ? 'block' : 'none'}}><ConfigIcon className='icon'  onClick={configMenuHandler}  ></ConfigIcon></button>\n      <Config shift={shift} configHandler={configHandler} configMenuHandler={configMenuHandler} backgroundColor={backgroundColor} placeholders={[font,fontSize,color,backgroundColor]}></Config>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}