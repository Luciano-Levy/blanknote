{"ast":null,"code":"var _jsxFileName = \"/home/luciano/Dev/Blanktxt/client/src/components/Config.jsx\";\nimport { ReactComponent as CrossIcon } from '../images/cross2.svg';\nimport '../styles/config.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Config(props) {\n  // key random en los color es un fix para que cambie dinamicamente\n  //TD generar los elementos dinamicamente\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: props.shift ? 'none' : 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"configForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"crossDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(CrossIcon, {\n            className: \"icon\",\n            onClick: props.configMenuHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"font\",\n          children: \"Fuente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"font\",\n          id: \"font\",\n          type: \"text\",\n          placeholder: props.placeholders[0],\n          onChange: props.configHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fontSize\",\n          children: \"Tama\\xF1o fuente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"fontSize\",\n          type: \"text\",\n          id: \"fontSize\",\n          placeholder: props.placeholders[1],\n          onChange: props.configHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"color\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color\",\n          type: \"color\",\n          id: \"color\",\n          defaultValue: props.placeholders[2],\n          onChange: props.configHandler\n        }, `${Math.floor(Math.random() * 1000)}-min`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"backgroundColor\",\n          children: \"Fondo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"backgroundColor\",\n          type: \"color\",\n          id: \"backgroundColor\",\n          defaultValue: props.placeholders[3],\n          onChange: props.configHandler\n        }, `${Math.floor(Math.random() * 1000)}-min`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Config;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Config\");","map":{"version":3,"sources":["/home/luciano/Dev/Blanktxt/client/src/components/Config.jsx"],"names":["ReactComponent","CrossIcon","Config","props","display","shift","configMenuHandler","placeholders","configHandler","Math","floor","random"],"mappings":";AAAA,SAAQA,cAAc,IAAIC,SAA1B,QAA0C,sBAA1C;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAEnC;AAEA;AACA,sBAEE;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAED,KAAK,CAACE,KAAN,GAAc,MAAd,GAAuB;AAAjC,KAAb;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,+BAAmB;AAAA,iCAAQ,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,MAArB;AAA4B,YAAA,OAAO,EAAEF,KAAK,CAACG;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAA0C,UAAA,WAAW,EAAEH,KAAK,CAACI,YAAN,CAAmB,CAAnB,CAAvD;AAA8E,UAAA,QAAQ,EAAEJ,KAAK,CAACK;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,MAA5B;AAAmC,UAAA,EAAE,EAAC,UAAtC;AAAiD,UAAA,WAAW,EAAEL,KAAK,CAACI,YAAN,CAAmB,CAAnB,CAA9D;AAAqF,UAAA,QAAQ,EAAEJ,KAAK,CAACK;AAArG;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,EAAE,EAAC,OAApC;AAA4C,UAAA,YAAY,EAAEL,KAAK,CAACI,YAAN,CAAmB,CAAnB,CAA1D;AAAmI,UAAA,QAAQ,EAAEJ,KAAK,CAACK;AAAnJ,WAAuF,GAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,IAA5B,CAAmC,MAA5H;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,IAAI,EAAC,OAAnC;AAA2C,UAAA,EAAE,EAAC,iBAA9C;AAAgE,UAAA,YAAY,EAAER,KAAK,CAACI,YAAN,CAAmB,CAAnB,CAA9E;AAAwJ,UAAA,QAAQ,EAAEJ,KAAK,CAACK;AAAxK,WAA2G,GAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,IAA5B,CAAmC,MAAhJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBD;KA9BuBT,M;AA8BvB","sourcesContent":["import {ReactComponent as CrossIcon} from '../images/cross2.svg';\nimport '../styles/config.css'\n\nexport default function Config(props){\n\n  // key random en los color es un fix para que cambie dinamicamente\n\n  //TD generar los elementos dinamicamente\n  return(\n\n    <form style={{display: props.shift ? 'none' : 'block'}}>\n\n      <div className='configForm'>\n        <div id='crossDiv'><button><CrossIcon className='icon' onClick={props.configMenuHandler}></CrossIcon></button></div>\n        <div>\n          <label htmlFor='font'>Fuente</label>\n          <input name='font' id='font' type=\"text\"  placeholder={props.placeholders[0]} onChange={props.configHandler}/>\n        </div>\n        <div>\n          <label htmlFor='fontSize'>Tama√±o fuente</label>\n          <input name='fontSize' type=\"text\" id='fontSize' placeholder={props.placeholders[1]} onChange={props.configHandler} />\n        </div>\n        <div>\n          <label htmlFor='color'>Color</label>\n          <input name='color' type=\"color\" id='color' defaultValue={props.placeholders[2]} key={`${Math.floor((Math.random() * 1000))}-min`} onChange={props.configHandler} />\n        </div>\n        <div>\n          <label htmlFor='backgroundColor'>Fondo</label>\n          <input name='backgroundColor' type=\"color\" id='backgroundColor' defaultValue={props.placeholders[3]} key={`${Math.floor((Math.random() * 1000))}-min`}  onChange={props.configHandler}/>\n        </div>\n      </div>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}